version: 2.1
commands:
  install-dependencies:
    description: "Install Python dependencies into a virtualenv."
    parameters:
      django_version:
        type: string
    steps:
      - checkout
      - run:
          name: install Python virtualenv
          command: |
            mkdir -p ~/venv
            if [ $(python -c "import platform; print(platform.python_version_tuple()[0])") == "2" ]; then
              virtualenv ~/venv;
            else
              python -m venv ~/venv;
            fi;
      - run:
          name: activate Python virtualenv
          command: echo "source ~/venv/bin/activate" >> $BASH_ENV
      - run: pip install coverage
      - run: pip install django==<< parameters.django_version >>
      - run: pip install -r ~/project/requirements.txt
  download-codeclimate-reporter:
    description: "Download CodeClimate test coverage reporter utility."
    steps:
     - run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
     - run: chmod +x ./cc-test-reporter
  run-automated-tests:
    steps:
      - run:
          name: activate Python virtualenv
          command: echo "source ~/venv/bin/activate" >> $BASH_ENV
      - run: ./cc-test-reporter before-build
      - run: PYTHONWARNINGS=all coverage run --include="session_cleanup/*" runtests.py
      - run: coverage xml
      - run: ./cc-test-reporter format-coverage -t coverage.py -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"
  upload-coverage-report-to-codeclimate:
    steps:
      - run: ./cc-test-reporter sum-coverage -o - -p $CIRCLE_NODE_TOTAL coverage/codeclimate.*.json | ./cc-test-reporter upload-coverage --debug -i -
jobs:
  lint:
    docker:
      - image: circleci/python:3.9
    steps:
      - checkout
      - run:
          name: install and activate virtualenv
          command: |
            python -m venv ~/venv
            echo "source ~/venv/bin/activate" >> $BASH_ENV
      - run:
          name: run linting
          command: |
            pip install flake8
            flake8
  test:
    parameters:
      django_version:
        type: string
      python_version:
        type: string
        default: latest
    docker:
      - image: circleci/python:<< parameters.python_version >>
    steps:
      - install-dependencies:
          django_version: << parameters.django_version >>
      - download-codeclimate-reporter
      - run-automated-tests
      - upload-coverage-report-to-codeclimate
workflows:
  lint-and-test:
    jobs:
      - lint
      - test:
          name: "Python 3.5, Django 2.2"
          django_version: "2.2.*"
          python_version: "3.5"
          requires:
            - lint
      - test:
          name: "Python 3.6, Django 2.2"
          django_version: "2.2.*"
          python_version: "3.6"
          requires:
            - lint
      - test:
          name: "Python 3.7, Django 2.2"
          django_version: "2.2.*"
          python_version: "3.7"
          requires:
            - lint
      - test:
          name: "Python 3.8, Django 2.2"
          django_version: "2.2.*"
          python_version: "3.8"
          requires:
            - lint
      - test:
          name: "Python 3.9, Django 2.2"
          django_version: "2.2.*"
          python_version: "3.9"
          requires:
            - lint
      - test:
          name: "Python 3.6, Django 3.0"
          django_version: "3.0.*"
          python_version: "3.6"
          requires:
            - lint
      - test:
          name: "Python 3.7, Django 3.0"
          django_version: "3.0.*"
          python_version: "3.7"
          requires:
            - lint
      - test:
          name: "Python 3.8, Django 3.0"
          django_version: "3.0.*"
          python_version: "3.8"
          requires:
            - lint
      - test:
          name: "Python 3.9, Django 3.0"
          django_version: "3.0.*"
          python_version: "3.9"
          requires:
            - lint
      - test:
          name: "Python 3.9, Django 3.0"
          django_version: "3.0.*"
          python_version: "3.9"
          requires:
            - lint
      - test:
          name: "Python 3.6, Django 3.1"
          django_version: "3.1.*"
          python_version: "3.6"
          requires:
            - lint
      - test:
          name: "Python 3.7, Django 3.1"
          django_version: "3.1.*"
          python_version: "3.7"
          requires:
            - lint
      - test:
          name: "Python 3.8, Django 3.1"
          django_version: "3.1.*"
          python_version: "3.8"
          requires:
            - lint
      - test:
          name: "Python 3.9, Django 3.1"
          django_version: "3.1.*"
          python_version: "3.9"
          requires:
            - lint
